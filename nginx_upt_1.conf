upstream payload_inspection {
    server 127.0.0.1:8000;
}

upstream backend_service {
    server 127.0.0.1:9000;
}

server {
    listen 80;
    server_name api-gateway.local;

    # Main entry: Payload Inspection + Rate Limiter
    location / {
        #  Rate limit applied here
        limit_req zone=api_rate_limit burst=5 nodelay;

        proxy_pass http://payload_inspection/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_intercept_errors on;
        error_page 403 = /blocked.json;
        error_page 503 = @rate_limited;  # Convert rate-limit 503 into 429
    }

    # Custom block message for malicious payloads
    location = /blocked.json {
        default_type application/json;
        return 403 '{"detail": "Request blocked by Payload Inspection"}';
    }

    # Custom message for rate limiting
    location @rate_limited {
        default_type application/json;
        return 429 '{"detail":"Too Many Requests - Please slow down"}';
    }

    # If payload inspection passes, requests are forwarded to backend
    location /forward {
        proxy_pass http://backend_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
